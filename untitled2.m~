clear all
%% fictional dataset

%given a scene + query + a run + a countdown
scene = 'blabla';
query = 'backflip';
run = 'run number10';
countdown = '15sec';

seqParam(1).seq = [0 1 0 1 2 1 2 3 4 3 2];
seqParam(1).min = 0 ; seqParam(1).max = 5 ; seqParam(1).step = 1;

seqParam(2).seq = [0.0 0.1 0.2 0.1 0.2 0.3 0.4 0.3 0.2 0.3 0.4];
seqParam(2).min = 0. ; seqParam(2).max = 0.5 ; seqParam(2).step = 0.1;

seqParam(3).seq = [10 11 10 11 10 12 11 12 13 14 15];
seqParam(3).min = 10 ; seqParam(3).max = 17 ; seqParam(3).step = 1;

seqParam(4).seq = [3.5 4. 4.5 4. 4.5 5. 5.5 6. 5.5 6. 5.5];
seqParam(4).min = 3.5 ; seqParam(4).max = 7 ; seqParam(4).step = 0.1;

seqM.seq = [0.2 0.3 0.6 0.8 0.74 0.35 0.24 0.15 0.48 0.69 0.47];
seqM.min = 0. ; seqM.max = 1.;

%% what should last:
colorAxis = 'k'; colorEvolution = 'b'; colorIsoMetric = 'g'; colorEmphasize = 'r';
axisStemRatio = 0.9 ; axisRadius = 0.01 ; axisHeadRatio = 1.5;

nbRestarts = max(size(seqParam(1).seq));
nbParams = max(size(seqParam));
if nbParamas > 2
    middleAxis = true;
    thetas = 90/(nbParams-2+1);
    %PUT ACTUALLY ALL THE FOLLOWING WITHIN THAT IF, AND ELSE ERROR USE
    %ANOTHER SCRIPT
end
indexesToPick = randperm(nbParams);

%Define the scaling factors for each axis,
%two first ones are 1unit long, whereas all the following are more or less
%greater than 1m long because they are chords within a square whith one
%extremity anchored onto a vertex
for i=1:nbParams
    for j=1:nbRestarts 
        seqParam(indexesToPick(i)).mapseq(j) = (seqParam(indexesToPick(i)).seq(j)-seqParam(indexesToPick(i)).min)/seqParam(indexesToPick(i)).max;
    end %mapped between 0 and 1
    if i <= 2
        tmpTheta = (i-2)*thetas;
        scalefactor = lengthChordFromVertexInSquare(tmpTheta,1); %map between 0 and smthg<sqrt(2)
        seqParam(indexesToPick(i)).mapseq = seqParam(indexesToPick(i)).mapseq * scalefactor;
    end
end
    
figure
%axis x
x = arrow3D([0 0 0], [1 0 0], colorAxis, axisStemRatio, axisRadius, axisHeadRatio);
hold on

%axis y
y = arrow3D([0 0 0], [0 1 0], colorAxis, axisStemRatio, axisRadius, axisHeadRatio);
hold on

%axis z
z = arrow3D([0 0 0], [0 0 1], colorAxis, axisStemRatio, axisRadius, axisHeadRatio);
hold on




grid on ; grid minor
xlabel('x') ; ylabel('y') ; zlabel('z')

% xx{1} = 0:xmax:xmax;
% yy{1} = 0:ymax:ymax;
% zz{1} = 0:1:1; %quality (or 100...)
% 
% for i=1:2
%     zz{i} = i-1:1:2;
%     yy{i} = zz{i}.*i.*sin(zz{i});
%     xx{i} = zz{i}.*i.*cos(zz{i});
%     XYZ{i} = [xx{i}',yy{i}',zz{i}'];
% end
% daspect([1,1,1])
% figure
% diam = 3;
% smooth = 40; %number of points per circumference
% tubes = streamtube(XYZ,[diam, smooth]);
% set(tubes,'EdgeColor','none','AmbientStrength',0.5,'FaceColor','r')
set(gca,'Projection','perspective')
camlight headlight
lighting gouraud